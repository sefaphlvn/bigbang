name: Create GitHub Release

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to create release from'
        required: true
        default: 'main'
        type: string

env:
  GH_TOKEN: ${{ secrets.GH_PAT }}

jobs:
  create-release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: |
          VERSION=$(cat VERSION)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version found: ${VERSION}"

      - name: Check if release exists
        id: check_release
        run: |
          RELEASE_EXISTS=$(gh release view v${{ steps.get_version.outputs.version }} 2>/dev/null || echo "false")
          if [ "$RELEASE_EXISTS" != "false" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.get_version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.get_version.outputs.version }} does not exist"
          fi

      - name: Create GitHub Release
        if: steps.check_release.outputs.exists == 'false'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          
          # Create a new tag
          git tag v${VERSION}
          git push origin v${VERSION}
          
          # Generate changelog from commits since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 v${VERSION}^ 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"* %s" ${PREVIOUS_TAG}..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"* %s")
          fi
          
          # Create release with changelog
          gh release create v${VERSION} \
            --title "Release v${VERSION}" \
            --notes "${CHANGELOG}"

      - name: Release Status
        run: |
          if [ "${{ steps.check_release.outputs.exists }}" == "true" ]; then
            echo "✅ Release v${{ steps.get_version.outputs.version }} already exists"
          else
            echo "✅ Release v${{ steps.get_version.outputs.version }} created successfully"
          fi 