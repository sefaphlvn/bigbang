# Build stage
FROM golang:1.22.7-alpine AS builder

# Set the Current Working Directory inside the container
WORKDIR /app

# Copy go mod and sum files
COPY go.mod go.sum ./

# Download all dependencies. Dependencies will be cached if the go.mod and go.sum files are not changed
RUN go mod download

# Copy the source from the current directory to the Working Directory inside the container
COPY . .

# Build arguments
ARG VERSION
ARG PROJECT_VERSION

# Set version information
ENV APP_VERSION=${PROJECT_VERSION}
ENV CONTROL_PLANE_VERSION=${VERSION}

# Build the Go app with version information
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo \
    -ldflags "-X main.Version=${PROJECT_VERSION} -X main.ControlPlaneVersion=${VERSION}" \
    -o bigbang .

# Final stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates

WORKDIR /root/

# Copy version information
ENV APP_VERSION=${PROJECT_VERSION}
ENV CONTROL_PLANE_VERSION=${VERSION}

# Copy the Pre-built binary file from the previous stage
COPY --from=builder /app/bigbang .

# Expose both REST and gRPC ports
EXPOSE 8099 18000

# Command to run the executable
CMD ["./bigbang"] 